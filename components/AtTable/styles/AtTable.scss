.at-table {
  $this: &;
  $color-background: $color-lightest;
  $color-striped: #FAFAFA;
  --size: #{$size-normal};
  --border-color: #{$color-dark-10};
  --border-right: none;

  position: relative;
  overflow: auto;
  padding: 0 $size-base $size-base;
  background-color: $color-background;

  // &__wrap{
  //   width: 100%;
  //   height: 100%;
  //   overflow: auto;
  //   padding: 0 $size-base $size-base;
  // }

  &__table{
    min-width: 100%;
    border-collapse: separate;
    border-spacing: 0;
    line-height: var(--size);
    text-align: left;
  }

  &__thead{
    line-height: calc(var(--size) + #{$size-base});

    &-th{
      padding: 0;
      border-bottom: solid 2px $color-major;
    }
  }

  &__tr{
    &:hover {
      th, td{
        background-color: $color-light;
      }
    }
  }

  &__th, &__td{
    padding: 0;
    border-bottom: solid 1px var(--border-color);
    border-right: var(--border-right);
    &:last-of-type{
      border-right: none;
    }
  }

  &__cell{
    display: inline-block;
    padding: 0 10px;
    line-height: 1.5em;
    vertical-align: middle;
  }

  &--border{
    border: solid 2px var(--border-color);
    --border-right: solid 1px var(--border-color);
  }
  //
  //
  &--striped {
    #{$this}__tr:nth-of-type(even){
      background-color: $color-striped;
    }
  }
  //
  //
  &--fixed {
    width: 100%;
    height: 100%;
    tbody{
      margin: 2px 0 0;
    }
    #{$this}__cell{
      word-break: break-all;
      word-break: break-word; // "at-table--fixed" not allow column width adaptation by long .
    }
  }

  &__th--sticky{
    position: sticky;
    background-color: rgba($color-background, 0.9);
    backdrop-filter: blur(2px);
    z-index: 2;

    &-left{
      &:first-of-type{
        box-shadow: #{-$size-base} 0 0 $color-background;
      }
    }
    &-right{
      &:last-of-type{
        box-shadow: #{$size-base} 0 0 $color-background;
      }
    }
  }
  //
  //
  //
  //

}